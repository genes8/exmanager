{"ast":null,"code":"import axios from 'axios';\nimport authService from './auth';\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: `${API_BASE_URL}/api`,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const token = authService.getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    authService.logout();\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// API endpoints\nexport const apiEndpoints = {\n  // Authentication\n  login: credentials => api.post('/auth/token', new URLSearchParams(credentials)),\n  register: userData => api.post('/auth/register', userData),\n  getCurrentUser: () => api.get('/auth/me'),\n  // Categories\n  getCategories: () => api.get('/categories'),\n  createCategory: categoryData => api.post('/categories', categoryData),\n  // Expenses\n  getExpenses: (params = {}) => api.get('/expenses', {\n    params\n  }),\n  getExpense: id => api.get(`/expenses/${id}`),\n  createExpense: formData => api.post('/expenses', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  approveExpense: (id, approvalData) => api.post(`/expenses/${id}/approve`, approvalData),\n  // Dashboard\n  getDashboardStats: () => api.get('/dashboard/stats'),\n  // Health check\n  healthCheck: () => api.get('/health')\n};\nexport default api;","map":{"version":3,"names":["axios","authService","API_BASE_URL","process","env","REACT_APP_BACKEND_URL","api","create","baseURL","headers","interceptors","request","use","config","token","getToken","Authorization","error","Promise","reject","response","_error$response","status","logout","window","location","href","apiEndpoints","login","credentials","post","URLSearchParams","register","userData","getCurrentUser","get","getCategories","createCategory","categoryData","getExpenses","params","getExpense","id","createExpense","formData","approveExpense","approvalData","getDashboardStats","healthCheck"],"sources":["/app/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\nimport authService from './auth';\n\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: `${API_BASE_URL}/api`,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = authService.getToken();\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      authService.logout();\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// API endpoints\nexport const apiEndpoints = {\n  // Authentication\n  login: (credentials) => api.post('/auth/token', new URLSearchParams(credentials)),\n  register: (userData) => api.post('/auth/register', userData),\n  getCurrentUser: () => api.get('/auth/me'),\n\n  // Categories\n  getCategories: () => api.get('/categories'),\n  createCategory: (categoryData) => api.post('/categories', categoryData),\n\n  // Expenses\n  getExpenses: (params = {}) => api.get('/expenses', { params }),\n  getExpense: (id) => api.get(`/expenses/${id}`),\n  createExpense: (formData) => api.post('/expenses', formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }),\n  approveExpense: (id, approvalData) => api.post(`/expenses/${id}/approve`, approvalData),\n\n  // Dashboard\n  getDashboardStats: () => api.get('/dashboard/stats'),\n\n  // Health check\n  healthCheck: () => api.get('/health'),\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,QAAQ;AAEhC,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,IAAI,uBAAuB;;AAEjF;AACA,MAAMC,GAAG,GAAGN,KAAK,CAACO,MAAM,CAAC;EACvBC,OAAO,EAAE,GAAGN,YAAY,MAAM;EAC9BO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGb,WAAW,CAACc,QAAQ,CAAC,CAAC;EACpC,IAAID,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACO,aAAa,GAAG,UAAUF,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAI,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAX,GAAG,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC1BQ,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCrB,WAAW,CAACsB,MAAM,CAAC,CAAC;IACpBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMU,YAAY,GAAG;EAC1B;EACAC,KAAK,EAAGC,WAAW,IAAKvB,GAAG,CAACwB,IAAI,CAAC,aAAa,EAAE,IAAIC,eAAe,CAACF,WAAW,CAAC,CAAC;EACjFG,QAAQ,EAAGC,QAAQ,IAAK3B,GAAG,CAACwB,IAAI,CAAC,gBAAgB,EAAEG,QAAQ,CAAC;EAC5DC,cAAc,EAAEA,CAAA,KAAM5B,GAAG,CAAC6B,GAAG,CAAC,UAAU,CAAC;EAEzC;EACAC,aAAa,EAAEA,CAAA,KAAM9B,GAAG,CAAC6B,GAAG,CAAC,aAAa,CAAC;EAC3CE,cAAc,EAAGC,YAAY,IAAKhC,GAAG,CAACwB,IAAI,CAAC,aAAa,EAAEQ,YAAY,CAAC;EAEvE;EACAC,WAAW,EAAEA,CAACC,MAAM,GAAG,CAAC,CAAC,KAAKlC,GAAG,CAAC6B,GAAG,CAAC,WAAW,EAAE;IAAEK;EAAO,CAAC,CAAC;EAC9DC,UAAU,EAAGC,EAAE,IAAKpC,GAAG,CAAC6B,GAAG,CAAC,aAAaO,EAAE,EAAE,CAAC;EAC9CC,aAAa,EAAGC,QAAQ,IAAKtC,GAAG,CAACwB,IAAI,CAAC,WAAW,EAAEc,QAAQ,EAAE;IAC3DnC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAsB;EACnD,CAAC,CAAC;EACFoC,cAAc,EAAEA,CAACH,EAAE,EAAEI,YAAY,KAAKxC,GAAG,CAACwB,IAAI,CAAC,aAAaY,EAAE,UAAU,EAAEI,YAAY,CAAC;EAEvF;EACAC,iBAAiB,EAAEA,CAAA,KAAMzC,GAAG,CAAC6B,GAAG,CAAC,kBAAkB,CAAC;EAEpD;EACAa,WAAW,EAAEA,CAAA,KAAM1C,GAAG,CAAC6B,GAAG,CAAC,SAAS;AACtC,CAAC;AAED,eAAe7B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}